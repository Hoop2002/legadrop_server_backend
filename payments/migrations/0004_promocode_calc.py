# Generated by Django 4.2.9 on 2024-01-30 12:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import utils.functions.id_generator


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("payments", "0003_paymentorder_genshin_uid"),
    ]

    operations = [
        migrations.CreateModel(
            name="PromoCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code_data",
                    models.CharField(
                        default=utils.functions.id_generator,
                        max_length=128,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=256)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("balance", "На баланс"),
                            ("bonus", "Бонус к пополнению"),
                        ],
                        max_length=64,
                    ),
                ),
                (
                    "summ",
                    models.FloatField(blank=True, null=True, verbose_name="Баланс"),
                ),
                (
                    "percent",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Процент",
                    ),
                ),
                (
                    "limit_activations",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Лимит активаций"
                    ),
                ),
                (
                    "to_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Действует до"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Calc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "calc_id",
                    models.CharField(
                        default=utils.functions.id_generator,
                        editable=False,
                        max_length=9,
                        unique=True,
                    ),
                ),
                ("summ", models.FloatField(verbose_name="Сумма начисления")),
                (
                    "creation_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "update_date",
                    models.DateTimeField(auto_now=True, verbose_name="Дата изменения"),
                ),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="calc",
                        to="payments.paymentorder",
                        verbose_name="Оплата",
                    ),
                ),
                (
                    "promo_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="calc",
                        related_query_name="calcs",
                        to="payments.promocode",
                        verbose_name="Промокод",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="calc",
                        related_query_name="calcs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
        ),
    ]
